{"version":3,"sources":["img/hokan1.png","img/hokan2.png","img/hokan3.png","BaseLayout.js","FormLayout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BaseLayout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","submitDate","teacherName","myName","myUnivNumber","myPhone","roomName","roomPhone","useTime","purpose","userName","Array","i","submitYear","submitMonth","submitDay","useMonth","useDay","useDayOfWeek","useStartHour","holidays","console","log","react_default","a","createElement","className","style","whiteSpace","src","hokan1","alt","hokan2","hokan3","colSpan","rowSpan","Component","FormLayout","localStorage","getItem","setAppState","event","_this2","v","target","value","setUserList","index","userList","slice","name","setState","setItem","_this3","width","height","onClick","e","pushButton","type","defaultValue","onChange","handleChange","APP","phone","univNum","render","date","Date","year","getFullYear","month","getMonth","day","getDate","String","daycount","dayOfWeek","getDay","lastDayOfMonth","dayOfWeekStr","tMonth","tDay","holidaysString","arr","replace","split","targetMonth","Number","targetDay","indexOf","dates","startMonth","startDay","stopMonth","stopDay","checkMonth","checkDay","dateInfo","checkContainHoliday","sheetCount","NextDay","zanryuStartHour","list","todayInfo","Today","startHour","push","BaseLayout_BaseLayout","key","content","generateSheetList","FormLayout_FormLayout","Boolean","window","location","hostname","match","ReactDOM","App_APP","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ecb5151c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hokan1.0ef6ef5e.png\";","module.exports = __webpack_public_path__ + \"static/media/hokan2.1b379c88.png\";","module.exports = __webpack_public_path__ + \"static/media/hokan3.56ff9e94.png\";","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport './css/BaseLayout.css';\r\n\r\n// 画像\r\nimport hokan1 from './img/hokan1.png'\r\nimport hokan2 from './img/hokan2.png'\r\nimport hokan3 from './img/hokan3.png'\r\n\r\nexport default class BaseLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        // 書き込み情報\r\n        submitDate   : \"\",\r\n        teacherName  : \"\",\r\n        myName       : \"\",\r\n        myUnivNumber : \"\",\r\n        myPhone      : \"\",\r\n        roomName     : \"\",\r\n        roomPhone    : \"\",\r\n        useTime      : \"\",\r\n        purpose      : \"研究\",\r\n        userName     : new Array(12)\r\n    }\r\n    \r\n    // 使用者氏名の初期化\r\n    for(let i = 0; i < 12; i++) {\r\n      this.state.userName[i] = \"\"\r\n    }\r\n\r\n    // 外部変数の代入\r\n    let submitYear          = this.props.submitYear\r\n    let submitMonth         = this.props.submitMonth\r\n    let submitDay           = this.props.submitDay\r\n    let useMonth            = this.props.useMonth\r\n    let useDay              = this.props.useDay\r\n    let useDayOfWeek        = this.props.useDayOfWeek\r\n    let useStartHour        = this.props.useStartHour\r\n    this.state.teacherName  = this.props.teacherName\r\n    this.state.myName       = this.props.myName\r\n    this.state.myPhone      = this.props.myPhone\r\n    this.state.myUnivNumber = this.props.myUnivNumber\r\n    this.state.roomName     = this.props.roomName\r\n    this.state.roomPhone    = this.props.roomPhone\r\n    this.state.holidays     = this.props.holidays\r\n    this.state.userName     = this.props.userName\r\n\r\n    // 願出年月日、使用日時の結合\r\n    this.state.submitDate = submitYear  + \"年\" + submitMonth + \"月\"   + submitDay + \"日\"\r\n    this.state.useTime    = useMonth    + \"月\" + useDay      + \"日（\" + useDayOfWeek + \"）\" + useStartHour + \"時00分から翌日の9時00分まで\"\r\n    \r\n    // 提出者の名前を代入\r\n    console.log(this.state.userName)\r\n    this.state.userName[0] = this.state.myName\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <div className=\"parent\"> */}\r\n          <div className=\"inner\">\r\n            <div className=\"subheader font11 fontfamily\" style={{whiteSpace: 'pre-line'}}>\r\n              {\"別紙様式第１号（H24.5.22改正）\\n\\n\"}\r\n            </div>\r\n            <div className=\"titleheader font20 fontfamily\" style={{whiteSpace: 'pre-line'}}>\r\n              {\"研究室・実験実習室等　時間外残留\\n\"}\r\n              {\"許可願\"}<img src={hokan1} alt=\"管理部保管\" className=\"n-font\"/>\r\n              {\" 　許可通知\"}<img src={hokan2} alt=\"警備室保管\" className=\"n-font\"/>\r\n              {\" 　許可証\"}<img src={hokan3} alt=\"代表者保管\" className=\"n-font\"/>\r\n            </div>\r\n            <div className=\"centerize\">\r\n            <div className=\"contentbody font12 fontfamily\">\r\n              <table className=\"fileTable\">\r\n                <tbody>\r\n                  {/* テーブルを横に18等分された列であると想定 */}\r\n                  {/* 「願出年月日」等は3列分、セル内容は6列分、使用者氏名の内容は各5列分を結合する */}\r\n                  {/* 以下は18列確保用 */}\r\n                  <tr className=\"borderless\">\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                  </tr>\r\n                  {/* 18列確保おわり */}\r\n                  <tr>\r\n                    <td colSpan=\"3\">願出年月日</td>\r\n                    <td colSpan=\"6\">{this.state.submitDate}</td>\r\n                    <td colSpan=\"3\">指導教員氏名</td>\r\n                    <td colSpan=\"1\" className=\"right-borderless\"></td>\r\n                    <td colSpan=\"4\" className=\"side-borderless\">{this.state.teacherName}</td>\r\n                    <td colSpan=\"1\" className=\"left-borderless left\">印</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">代表者氏名</td>\r\n                    <td colSpan=\"1\" className=\"right-borderless\"></td>\r\n                    <td colSpan=\"4\" className=\"name-phone side-borderless\" style={{whiteSpace: 'pre-line'}}>\r\n                      {this.state.myName + \"\\n\"}\r\n                      <span className=\"font7\">{\"（携帯）\" + this.state.myPhone}</span>\r\n                    </td>\r\n                    <td colSpan=\"1\" className=\"left-borderless left\">印</td>\r\n                    <td colSpan=\"3\">学修番号</td>\r\n                    <td colSpan=\"6\">{this.state.myUnivNumber}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">施設</td>\r\n                    <td colSpan=\"11\" className=\"right-borderless\">{this.state.roomName}</td>\r\n                    <td colSpan=\"4\"  className=\"left-borderless\" >内線　{this.state.roomPhone}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">日時</td>\r\n                    <td colSpan=\"15\">{this.state.useTime}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">目的</td>\r\n                    <td colSpan=\"15\">{this.state.purpose}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\" rowSpan=\"4\" style={{whiteSpace: 'pre-line'}}>\r\n                      {\"使用者氏名\\n(代表者含む)\"}\r\n                    </td>\r\n                    <td colSpan=\"5\">{this.state.userName[0]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[1]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[2]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"5\">{this.state.userName[3]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[4]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[5]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"5\">{this.state.userName[6]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[7]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[8]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"5\">{this.state.userName[9]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[10]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[11]}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            </div>\r\n            <div className=\"contentbottom font12 fontfamily left\" style={{whiteSpace: 'pre-line'}}>\r\n              {\"＜注＞ １ 研究室・実験実習室等に平日21時以降及び土日祝(終日)残留する場合に提出\\n\"}\r\n              {\"　　　 　 すること。\\n\"}\r\n              {\"　　　 ２ 当日の17時までに教務係へ提出すること。\\n\"}\r\n              {\"　　　 　 17時以降は20時までに警備室に提出すること。\\n\"}\r\n              {\"　　　 ３ 指導教員の認印のないもの及び20時以降は受け付けられない。\\n\"}\r\n              {\"　　　 ４ 本様式は、適宜変更して使用することができる。\\n\"}\r\n            </div>\r\n            <div className=\"tablefooter font12 fontfamily\">\r\n              <table className=\"authTable\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"member\">管理局長</td>\r\n                    <td className=\"member\">庶務係長</td>\r\n                    <td className=\"member\">教務係長</td>\r\n                    <td className=\"member\">教務係</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"stamp\"></td>\r\n                    <td className=\"stamp\"></td>\r\n                    <td className=\"stamp\"></td>\r\n                    <td className=\"stamp\"></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        {/* </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport './css/BaseLayout.css';\r\n\r\nexport default class FormLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        // 書き込み情報\r\n        submitDate   : \"\",\r\n        teacherName  : \"\",\r\n        myName       : \"\",\r\n        myUnivNumber : \"\",\r\n        myPhone      : \"\",\r\n        roomName     : \"\",\r\n        roomPhone    : \"\",\r\n        purpose      : \"研究\",\r\n        userName     : new Array(12),\r\n        holidays     : \"\"\r\n    }\r\n    \r\n    // 外部変数の代入\r\n    let submitYear          = this.props.submitYear\r\n    let submitMonth         = this.props.submitMonth\r\n    let submitDay           = this.props.submitDay\r\n\r\n    // 願出年月日、使用日時の結合\r\n    this.state.submitDate = submitYear  + \"年\" + submitMonth + \"月\"   + submitDay + \"日\"\r\n\r\n    // 使用者氏名の初期化\r\n    for(let i = 0; i < 12; i++) {\r\n      // 以前のデータ読み込み\r\n      this.state.userName[i] = localStorage.getItem('userName' + i) !== null ? localStorage.getItem('userName' + i) : \"\"\r\n    }\r\n\r\n    // 提出者の名前を代入\r\n    this.state.userName[0] = this.state.myName\r\n\r\n    // 以前のデータを読み込む\r\n    this.state.teacherName  = localStorage.getItem('teacherName' ) !== null ? localStorage.getItem('teacherName' ) : \"高間　康史\"\r\n    this.state.myName       = localStorage.getItem('myName'      ) !== null ? localStorage.getItem('myName'      ) : \"｛氏名｝\"\r\n    this.state.myPhone      = localStorage.getItem('myPhone'     ) !== null ? localStorage.getItem('myPhone'     ) : \"｛電話番号｝\"\r\n    this.state.myUnivNumber = localStorage.getItem('myUnivNumber') !== null ? localStorage.getItem('myUnivNumber') : \"｛学修番号｝\"\r\n    this.state.roomName     = localStorage.getItem('roomName'    ) !== null ? localStorage.getItem('roomName'    ) : \"2号館103実験室\"\r\n    this.state.roomPhone    = localStorage.getItem('roomPhone'   ) !== null ? localStorage.getItem('roomPhone'   ) : \"4215\"\r\n    this.state.holidays     = localStorage.getItem('holidays'    ) !== null ? localStorage.getItem('holidays'    ) : \"\"\r\n  }\r\n\r\n  // ボタンをクリックしたとき実行\r\n  pushButton() {\r\n    this.props.setAppState(this.state.teacherName,\r\n                           this.state.myName,\r\n                           this.state.myPhone,\r\n                           this.state.myUnivNumber,\r\n                           this.state.roomName,\r\n                           this.state.roomPhone,\r\n                           this.state.holidays,\r\n                           this.state.userName)\r\n  }\r\n\r\n  // 入力フォームに文字が入ったとき実行\r\n  handleChange(event) {\r\n    let v = event.target.value\r\n\r\n    // 使用者名リスト記名欄の時\r\n    let setUserList = (index) => {\r\n      let userList = this.state.userName.slice()\r\n      userList[index] = v\r\n      return userList\r\n    }\r\n\r\n    switch(event.target.name) {\r\n      case \"teacherName\" : this.setState({teacherName:  v}); localStorage.setItem('teacherName',  v); break;\r\n      case \"name\"        : this.setState({myName :      v}); localStorage.setItem('myName',       v); setUserList(0); break;\r\n      case \"phone\"       : this.setState({myPhone:      v}); localStorage.setItem('myPhone',      v); break;\r\n      case \"univNum\"     : this.setState({myUnivNumber: v}); localStorage.setItem('myUnivNumber', v); break;\r\n      case \"roomName\"    : this.setState({roomName:     v}); localStorage.setItem('roomName',     v); break;\r\n      case \"roomPhone\"   : this.setState({roomPhone:    v}); localStorage.setItem('roomPhone',    v); break;\r\n      case \"holidays\"    : this.setState({holidays:     v}); localStorage.setItem('holidays',     v); break;\r\n      case \"userName1\"   : this.setState({userName: setUserList(1)}); localStorage.setItem('userName1', v); break;\r\n      case \"userName2\"   : this.setState({userName: setUserList(2)}); localStorage.setItem('userName2', v); break;\r\n      case \"userName3\"   : this.setState({userName: setUserList(3)}); localStorage.setItem('userName3', v); break;\r\n      case \"userName4\"   : this.setState({userName: setUserList(4)}); localStorage.setItem('userName4', v); break;\r\n      case \"userName5\"   : this.setState({userName: setUserList(5)}); localStorage.setItem('userName5', v); break;\r\n      default : break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <div className=\"parent\"> */}\r\n          <div className=\"inner\">\r\n            <div className=\"subheader font11 fontfamily\" style={{whiteSpace: 'pre-line'}}>\r\n              {\"別紙様式第１号（H24.5.22改正）\\n\\n\"}\r\n            </div>\r\n            <div className=\"titleheader font20 fontfamily\" style={{whiteSpace: 'pre-line'}}>\r\n              {\"時間外残留　生成用フォーム\\n\"}\r\n              <button style={{width:'100px', height:'30px'}} onClick={e => this.pushButton()}>生成</button>\r\n            </div>\r\n            <div className=\"centerize\">\r\n            <div className=\"contentbody font12 fontfamily\">\r\n              <table className=\"fileTable\">\r\n                <tbody>\r\n                  {/* テーブルを横に18等分された列であると想定 */}\r\n                  {/* 「願出年月日」等は3列分、セル内容は6列分、使用者氏名の内容は各5列分を結合する */}\r\n                  {/* 以下は18列確保用 */}\r\n                  <tr className=\"borderless\">\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                    <td className=\"borderless\"></td><td className=\"borderless\"></td><td className=\"borderless\"></td>\r\n                  </tr>\r\n                  {/* 18列確保おわり */}\r\n                  <tr>\r\n                    <td colSpan=\"3\">願出年月日</td>\r\n                    <td colSpan=\"6\">{this.state.submitDate}</td>\r\n                    <td colSpan=\"3\">指導教員氏名</td>\r\n                    <td colSpan=\"6\">\r\n                      <input type=\"text\" name=\"teacherName\" defaultValue={this.state.teacherName} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">代表者氏名</td>\r\n                    <td colSpan=\"6\" style={{whiteSpace: 'pre-line'}}>\r\n                      <input type=\"text\" name=\"name\"  defaultValue={this.state.myName}  onChange={e => this.handleChange(e)}/>{\"\\n\"}\r\n                      <input type=\"text\" name=\"phone\" defaultValue={this.state.myPhone} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                    <td colSpan=\"3\">学修番号</td>\r\n                    <td colSpan=\"6\">\r\n                      <input type=\"text\" name=\"univNum\" defaultValue={this.state.myUnivNumber} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">施設</td>\r\n                    <td colSpan=\"15\">\r\n                      部屋名など：\r\n                      <input type=\"text\" name=\"roomName\" defaultValue={this.state.roomName} onChange={e => this.handleChange(e)}/>\r\n                      　　　内線：\r\n                      <input type=\"text\" name=\"roomPhone\" style={{width: '50px'}} defaultValue={this.state.roomPhone} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">日時</td>\r\n                    <td colSpan=\"15\" style={{whiteSpace: 'pre-line'}}>\r\n                      例外的な休日：\r\n                      <input type=\"text\" name=\"holidays\" style={{width: '370px'}} defaultValue={this.state.holidays} onChange={e => this.handleChange(e)}/>{\"\\n\"}\r\n                      <span className=\"font10\">{\"※「5/5,12/30-1/3」など　複数日はカンマ区切り、期間はハイフンで指定\"}</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">目的</td>\r\n                    <td colSpan=\"15\">{this.state.purpose}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\" rowSpan=\"4\" style={{whiteSpace: 'pre-line'}}>\r\n                      {\"使用者氏名\\n(代表者含む)\"}\r\n                    </td>\r\n                    <td colSpan=\"5\">{this.state.myName}</td>\r\n                    <td colSpan=\"5\">\r\n                      <input type=\"text\" name=\"userName1\" style={{width: '140px'}} defaultValue={this.state.userName[1]} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                    <td colSpan=\"5\">\r\n                      <input type=\"text\" name=\"userName2\" style={{width: '140px'}} defaultValue={this.state.userName[2]} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"5\">\r\n                      <input type=\"text\" name=\"userName3\" style={{width: '140px'}} defaultValue={this.state.userName[3]} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                    <td colSpan=\"5\">\r\n                      <input type=\"text\" name=\"userName4\" style={{width: '140px'}} defaultValue={this.state.userName[4]} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                    <td colSpan=\"5\">\r\n                      <input type=\"text\" name=\"userName5\" style={{width: '140px'}} defaultValue={this.state.userName[5]} onChange={e => this.handleChange(e)}/>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"5\">{this.state.userName[6]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[7]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[8]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"5\">{this.state.userName[9]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[10]}</td>\r\n                    <td colSpan=\"5\">{this.state.userName[11]}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            </div>\r\n            <div className=\"contentbottom font12 fontfamily left\" style={{whiteSpace: 'pre-line'}}>\r\n              {\"＜注＞ １ 研究室・実験実習室等に平日21時以降及び土日祝(終日)残留する場合に提出\\n\"}\r\n              {\"　　　 　 すること。\\n\"}\r\n              {\"　　　 ２ 当日の17時までに教務係へ提出すること。\\n\"}\r\n              {\"　　　 　 17時以降は20時までに警備室に提出すること。\\n\"}\r\n              {\"　　　 ３ 指導教員の認印のないもの及び20時以降は受け付けられない。\\n\"}\r\n              {\"　　　 ４ 本様式は、適宜変更して使用することができる。\\n\"}\r\n            </div>\r\n            <div className=\"tablefooter font12 fontfamily\">\r\n              <table className=\"authTable\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"member\">管理局長</td>\r\n                    <td className=\"member\">庶務係長</td>\r\n                    <td className=\"member\">教務係長</td>\r\n                    <td className=\"member\">教務係</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"stamp\"></td>\r\n                    <td className=\"stamp\"></td>\r\n                    <td className=\"stamp\"></td>\r\n                    <td className=\"stamp\"></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        {/* </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport BaseLayout           from './BaseLayout'\r\nimport FormLayout           from './FormLayout';\r\nimport './css/App.css'\r\nimport './css/BaseLayout.css'\r\n\r\n// 外部から入力すべきパラメータ\r\n// let inputMyName       = \"名字　名前\"\r\n// let inputMyUnivNumber = \"00000000\"\r\n// let inputMyPhone      = \"123-4567-8910\"\r\n\r\nexport default class APP extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teacherName  : \"\",\r\n      myName       : \"\",\r\n      myPhone      : \"\",\r\n      myUnivNumber : \"\",\r\n      roomName     : \"\",\r\n      roomPhone    : \"\",\r\n      holidays     : \"\",\r\n      userName     : new Array(12)\r\n    }\r\n  }\r\n\r\n  // 値を受け取るための関数\r\n  setAppState = (teacherName, name, phone, univNum, roomName, roomPhone, holidays, userName) => {\r\n    this.setState({\r\n      teacherName:  teacherName,\r\n      myName:       name,\r\n      myPhone:      phone,\r\n      myUnivNumber: univNum, \r\n      roomName:     roomName, \r\n      roomPhone:    roomPhone,\r\n      holidays:     holidays,\r\n      userName:     userName,\r\n    })\r\n\r\n    // 生成\r\n    this.render()\r\n  }\r\n\r\n  // 今日の日付を年月日に分けて文字列で取得する関数\r\n  Today() {\r\n    let date = new Date ()\r\n    let year         = date.getFullYear()   // 年\r\n    let month        = date.getMonth() + 1  // 月\r\n    let day          = date.getDate()       // 日\r\n    return [String(year), String(month), String(day)]\r\n  }\r\n\r\n  // 今日からN日後の日付を取得する関数（N=0で今日）\r\n  NextDay(daycount) {\r\n    let date = new Date ()\r\n    let year         = date.getFullYear()   // 年\r\n    let month        = date.getMonth() + 1  // 月\r\n    let day          = date.getDate()       // 日\r\n    let dayOfWeek    = date.getDay()        // 曜日(数値)\r\n\r\n    // 日付を進める\r\n    day += daycount\r\n    dayOfWeek = (dayOfWeek + daycount) % 7\r\n\r\n    while (true) {\r\n      // 月の最後の日(0番目の要素を無視)\r\n      let lastDayOfMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\r\n      if (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)) {\r\n        lastDayOfMonth[2] = 29\r\n      }\r\n\r\n      // 日付が月をまたいだか\r\n      if (day > lastDayOfMonth[month]) {\r\n        day = day - lastDayOfMonth[month]\r\n        month += 1\r\n\r\n        // 年越ししたか\r\n        if (month > 12) {\r\n          month -= 12\r\n          year += 1\r\n        }\r\n\r\n      } else {\r\n        // 日付が月の最大値におさまっているなら終了\r\n        break\r\n      }\r\n    }\r\n    // 日付の書き出し\r\n    let dayOfWeekStr = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"][dayOfWeek]\r\n    return [String(year), String(month), String(day), dayOfWeekStr]\r\n  }\r\n\r\n  // 指定の日付が例外日に含まれるか\r\n  checkContainHoliday (tMonth, tDay, holidaysString) {\r\n    // 「,」で分割\r\n    let arr = holidaysString.replace(/\\s+/g, \"\").split(\",\")\r\n\r\n    // 月日を数値に直す\r\n    let targetMonth = Number(tMonth)\r\n    let targetDay   = Number(tDay)\r\n\r\n    // 例外日すべてについて探索\r\n    for (let i in arr) {\r\n\r\n      // ハイフンが含まれるなら，範囲による指定\r\n      if (arr[i].indexOf(\"-\") > -1) {\r\n        // 月と日付を分割して抽出\r\n        let dates      = arr[i].split(\"-\")\r\n        let startMonth = Number(dates[0].split(\"/\")[0])\r\n        let startDay   = Number(dates[0].split(\"/\")[1])\r\n        let stopMonth  = Number(dates[1].split(\"/\")[0])\r\n        let stopDay    = Number(dates[1].split(\"/\")[1])\r\n        console.log(startMonth + \", \" + startDay + \", \" + stopMonth + \", \" + stopDay);\r\n\r\n        // 年をまたぐ場合\r\n        if (stopMonth < startMonth || (stopMonth === startMonth && stopDay <= startDay)) {\r\n          // 指定日 <= 終了日 または 開始日 <= 指定日 なら例外日認定\r\n          if (targetMonth < stopMonth   || (targetMonth === stopMonth   && targetDay <= stopDay) ||     // 指定日 <= 終了日\r\n              startMonth  < targetMonth || (startMonth  === targetMonth && startDay  <= targetDay)) {   // 開始日 <= 指定日\r\n            return true\r\n          }\r\n\r\n        // 年をまたがない場合\r\n        } else {\r\n          // 開始日 <= 指定日 かつ 指定日 <= 終了日 なら例外日認定\r\n          if ((startMonth  < targetMonth || (startMonth  === targetMonth && startDay  <= targetDay)) &&   // 指定日 <= 終了日\r\n              (targetMonth < stopMonth   || (targetMonth === stopMonth   && targetDay <= stopDay))) {     // 開始日 <= 指定日\r\n            return true\r\n          }\r\n        }\r\n\r\n      // 含まれないなら，一致による指定\r\n      } else {\r\n\r\n        // 月と日付を分割して抽出\r\n        let checkMonth = Number(arr[i].split(\"/\")[0])\r\n        let checkDay   = Number(arr[i].split(\"/\")[1])\r\n\r\n        // 指定日と一致するなら例外日認定\r\n        if (targetMonth === checkMonth && targetDay === checkDay) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 残留開始時刻（＝休日）\r\n  zanryuStartHour (dateInfo) {\r\n    if (dateInfo[3] === \"土\" || dateInfo[3] === \"日\" || this.checkContainHoliday(dateInfo[1], dateInfo[2], this.state.holidays)) {\r\n      return \"9\"\r\n    } else {\r\n      return \"21\"\r\n    }\r\n  }\r\n\r\n  // 印刷物の生成\r\n  generateSheetList () {\r\n\r\n    // 印刷枚数の取得\r\n    let date       = new Date ()\r\n    let dayOfWeek  = date.getDay()   // 曜日(数値)\r\n    let sheetCount = 1\r\n    if (dayOfWeek > 0) {\r\n      sheetCount = 8 - dayOfWeek\r\n      // 翌月曜日から先が休日ならさらに増やす\r\n      while (true) {\r\n        let dateInfo = this.NextDay(sheetCount)\r\n        if (this.zanryuStartHour(dateInfo) === \"21\") {\r\n          break;\r\n        }\r\n        sheetCount++\r\n      }\r\n    }\r\n\r\n    // 日付リストと要素の構築\r\n    let list = []\r\n    for (let i = 0; i < sheetCount; i++) {\r\n      let todayInfo    = this.Today()\r\n      let dateInfo     = this.NextDay(i)\r\n      let startHour    = this.zanryuStartHour(dateInfo)\r\n      list.push(<BaseLayout key          = {String(i)}\r\n                            submitYear   = {todayInfo[0]}\r\n                            submitMonth  = {todayInfo[1]}\r\n                            submitDay    = {todayInfo[2]}\r\n                            useMonth     = {dateInfo[1]}\r\n                            useDay       = {dateInfo[2]}\r\n                            useDayOfWeek = {dateInfo[3]}\r\n                            useStartHour = {startHour}\r\n                            teacherName  = {this.state.teacherName}\r\n                            myName       = {this.state.myName}\r\n                            myPhone      = {this.state.myPhone}\r\n                            myUnivNumber = {this.state.myUnivNumber}\r\n                            roomName     = {this.state.roomName}\r\n                            roomPhone    = {this.state.roomPhone}\r\n                            userName     = {this.state.userName}/>)\r\n    }\r\n    return list\r\n  }\r\n\r\n  // 描画\r\n  render() {\r\n    let content = []\r\n\r\n    // 全ての欄が埋まっているなら生成\r\n    if (this.state.teacherName !== \"\" &&\r\n        this.state.name !== \"\" &&\r\n        this.state.phone !== \"\" &&\r\n        this.state.univNum !== \"\" && \r\n        this.state.roomName !== \"\" && \r\n        this.state.roomPhone !== \"\") {\r\n      content = this.generateSheetList()\r\n    } else {\r\n      let todayInfo    = this.Today()\r\n      content = <FormLayout setAppState  = {this.setAppState}\r\n                            submitYear   = {todayInfo[0]} \r\n                            submitMonth  = {todayInfo[1]} \r\n                            submitDay    = {todayInfo[2]}/>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {content}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}